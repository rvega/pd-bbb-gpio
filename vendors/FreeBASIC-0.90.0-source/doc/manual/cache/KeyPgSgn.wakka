{{fbdoc item="title" value="SGN"}}----
Returns the sign part of a number

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Sgn** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgDouble double]] ) [[KeyPgAs as]] [[KeyPgDouble double]]
##
{{fbdoc item="usage"}}##
	//result// = **Sgn**( //number// )
##
{{fbdoc item="param"}}
	##//number//##
		the number

{{fbdoc item="ret"}}
	Returns the sign part of ##//number//##.
	- If //number// is greater than zero, then SGN returns 1.
	- If //number// is equal to zero, then SGN returns 0.
	- If //number// is less than zero, then SGN returns -1.

{{fbdoc item="desc"}}
	The required ##//number//## argument can be any valid numeric expression. If ##//number//## is an uninitialized variable, zero is returned.

	The ##**Sgn**## unary ##[[KeyPgOperator operator]]## can be overloaded with user defined types.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/math/sgn.bas"}}%%(freebasic)
DIM N AS INTEGER

PRINT SGN ( -1.87 )
PRINT SGN ( 0 )
PRINT SGN ( 42.658 )
PRINT SGN ( N )
%%

The output would look like:
%%
-1
0
1
0
%%

{{fbdoc item="lang"}}
	- In the //[[CompilerOptlang -lang qb]]// dialect, this operator cannot be overloaded.

{{fbdoc item="diff"}}
	- None

{{fbdoc item="see"}}
	- ##[[KeyPgAbs Abs]]##
	- ##[[KeyPgOperator Operator]]##

{{fbdoc item="back" value="CatPgMath|Math"}}